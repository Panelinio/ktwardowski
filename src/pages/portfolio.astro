---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
---

<Layout title="Portfolio">
  <main>
    <h1>Portfolio</h1>
    <div class="buttons">
      <button>Rysunki</button>
      <button>Grafika Komputerowa</button>
      <button>Web Design</button>
    </div>
    <div class="cards" id="drawing">
      <Card
        src="/portfolio/drawing1.jpg"
        title="Rysunek 1"
        body="Opis rysunku 1"
      />
    </div>
    <div class="cards" id="graphic">
      <Card
        src="/portfolio/graphic/loggr.png"
        title="MT House"
        body="Projekt logo dla firmy budowlanej. Zaprojektowane z myślą o nowoczesnym stylu i prostocie - chciałem zawrzeć w logo litery M oraz T."
      />
      <Card
        src="/portfolio/graphic/it.png"
        title="BSOD Day"
        body="Grafika nawiązująca do słynnej awarii Crowdstrike. Pozdrowienia i słowa otuchy dla każdego informatyka jako słynny Blue Screen of Death."
      />
      <Card
        src="/portfolio/graphic/esta.png"
        title="Esta-Travel"
        body="Tworząc to logo kierowałem się wizualizacją amerykańskiego transportu - takie też było zlecenie. Efekt? Połączenie ciężarówki oraz orła."
      />
    </div>
    <div class="cards" id="web">
      <Card
        src="/portfolio/web/abstratec.png"
        title="Abstratec"
        body="Tworząć Abstratec kierowałem się stylem zwanym 'Generative Design', jednak postawiłem na swoje umiejętności tworzenia grafiki."
      />
      <Card
        src="/portfolio/web/todo.png"
        title="TODO List"
        body="Strona internetowa z listą zadań do wykonania. Haczyk w tym, że nie została tu napisana ani jedna linijka kodu JavaScript."
      />
      <Card
        src="/portfolio/web/watch.png"
        title="Wonderful Watch"
        body="Chciałem zaprojektować stronę z zegarem, która wyłamuje się na tle innych. W tym projekcie połączyłem podstawę JavaScript z nowoczesnym designem."
      />
      <Card
        src="/portfolio/web/strefa.png"
        title="Strefa Menadżera"
        body="Mój największy projekt w Symfony. Jest to aplikacja webowa dla menadżerów firmy. Zalogowany administrator może dodawać, edytować oraz usuwać posty czy kategorie. Na ten moment to jedynie funkcjonalny protopyp/szablon."
      />
    </div>
  </main>
  <div id="imageModal" class="modal">
    <span class="close">&times;</span>
    <img class="modal-content" id="modalImage" />
  </div>
  <style>
    h1 {
      font-size: 4rem;
      font-weight: 700;
      line-height: 1;
      text-align: center;
      margin-bottom: 1em;
      margin-top: 7rem;
    }

    .buttons {
      display: flex;
      justify-content: center;
      margin-bottom: 2rem;
    }

    button {
      background-color: var(--white);
      border: none;
      border-radius: 0.5rem;
      color: var(--dark);
      cursor: pointer;
      font-size: 1.2rem;
      font-weight: 700;
      margin: 0 1rem;
      padding: 0.5rem 1rem;
      transition: all 0.2s ease-out;
    }

    button:hover {
      background-color: var(--accent);
      transform: scale(1.1);
    }

    .cards {
      display: none;
      flex-wrap: wrap;
      justify-content: center;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.9);
    }

    .modal-content {
      margin: auto;
      display: block;
      width: 80%;
      max-width: 600px;
      margin-top: 5%;
    }

    .close {
      position: absolute;
      top: 15px;
      right: 35px;
      color: #fff;
      font-size: 40px;
      font-weight: bold;
      transition: 0.3s;
    }

    .close:hover,
    .close:focus {
      color: #bbb;
      text-decoration: none;
      cursor: pointer;
    }
  </style>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const buttons = document.querySelectorAll("button");
      const cards = document.querySelectorAll(".cards");
      const modal = document.getElementById("imageModal") as HTMLElement;
      const modalImg = document.getElementById(
        "modalImage"
      ) as HTMLImageElement;
      const closeBtn = document.getElementsByClassName(
        "close"
      )[0] as HTMLElement;

      buttons.forEach((button, index) => {
        button.addEventListener("click", () => {
          cards.forEach((card) => {
            const cardElement = card as HTMLElement;
            cardElement.style.display = "none";
          });
          (cards[index] as HTMLElement).style.display = "flex";
        });
      });

      cards.forEach((card) => {
        card.addEventListener("click", () => {
          const img = card.querySelector("img") as HTMLImageElement;
          if (img) {
            modal.style.display = "block";
            modalImg.src = img.src;
          }
        });
      });

      closeBtn.addEventListener("click", () => {
        modal.style.display = "none";
      });
    });
  </script>
</Layout>
