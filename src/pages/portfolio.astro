---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
---

<Layout title="Portfolio">
  <main>
    <h1>Portfolio</h1>
    <div class="buttons">
      <button class="filter-button" data-category="art">Rysunki</button>
      <button class="filter-button" data-category="graphic">Grafika</button>
      <button class="filter-button" data-category="webdesign">Web Design</button>
    </div>
    <div class="cards" id="drawing" data-category="art">
      <Card
        src="/ktwardowski/portfolio/art/verferia.jpg"
        title="Verferia"
        body="Dopieszczony projekt potwora do jednego z moich komiksów. Za niego otrzymałem wyróżnienie i nagrodę w konkursie."
      />
      <Card
        src="/ktwardowski/portfolio/art/cherry.jpg"
        title="Kwitnąca wiśnia"
        body="Tworząc ten rysunek chciałem uzyskać efekt japońskich malowideł."
      />
      <Card
        src="/ktwardowski/portfolio/art/wiedźmin.jpg"
        title="Wiedźmin"
        body="Portret Geralta z Rivii, bohatera sagi Andrzeja Sapkowskiego."
      />
      <Card
        src="/ktwardowski/portfolio/art/las.jpg"
        title="Las"
        body="Odzworowane zdjęcie lasu wykonane przeze mnie."
      />
      <Card
        src="/ktwardowski/portfolio/art/łąka.jpg"
        title="Łąka"
        body="Wieczorny widok łąki niedaleko mojego rodzinnego domu."
      />
      <Card
        src="/ktwardowski/portfolio/art/krokodyl.jpg"
        title="Krokodyl z parasolem"
        body="Rysunek stworzony w ramach wyzwania ilustratorki."
      />
      <Card
        src="/ktwardowski/portfolio/art/królik.jpg"
        title="Królik"
        body="Zadaniem było narysowanie magicznego królika, zatem mojemu dorysowałem magiczne przedmioty z gry League of Legends."
      />
      <Card
      src="/ktwardowski/portfolio/art/dziewczynakawa.jpg"
      title="Sweter w kolorze kawy"
      body="Ilustracja do okładki książki."
      />
      <Card
      src="/ktwardowski/portfolio/art/httyd.jpg"
      title="Szczerbatek"
      body="Kocham serię Jak Wytresować Smoka <3"
      />
      <Card
      src="/ktwardowski/portfolio/art/duch.jpg"
      title="Napstablook"
      body="Zadaniem było narysowanie ducha, więc postawiłem na Napstablooka z gry Undertale."
      />
    </div>
    <div class="cards" id="graphic" data-category="graphic">
      <Card
        src="/ktwardowski/portfolio/graphic/devilgarage.jpg"
        title="Devil Garage"
        body="Logo firmy detailingowej. Zleceniodawca chciał, aby zawierało diabła trzymającego polerkę."
      />
      <Card
        src="/ktwardowski/portfolio/graphic/invetec.jpg"
        title="Invetec"
        body="Firma specjalizująca się w częściach samochodowych. Logo miało być nowoczesne i proste."
      />
      <Card
        src="/ktwardowski/portfolio/graphic/loggr.jpg"
        title="MT House"
        body="Projekt logo dla firmy budowlanej. Zaprojektowane z myślą o nowoczesnym stylu i prostocie - chciałem zawrzeć w nim litery M oraz T."
      />
      <Card
        src="/ktwardowski/portfolio/graphic/it.jpg"
        title="BSOD Day"
        body="Grafika nawiązująca do słynnej awarii Crowdstrike. Pozdrowienia i słowa otuchy dla każdego informatyka jako słynny Blue Screen of Death."
      />
      <Card
        src="/ktwardowski/portfolio/graphic/esta.jpg"
        title="Esta-Travel"
        body="Chciałem uzyskać wizualizację amerykańskiego transportu - takie też było zlecenie. Efekt? Połączenie ciężarówki oraz orła."
      />
    </div>
    <div class="cards" id="web" data-category="webdesign">
      <Card
        src="/ktwardowski/portfolio/web/abstratec.jpg"
        title="Abstratec"
        body="Tworząc Abstratec kierowałem się stylem zwanym 'Generative Design'. Postawiłem jednak na grafiki stworzone przeze mnie."
      />
      <Card
        src="/ktwardowski/portfolio/web/todo.jpg"
        title="TODO List"
        body="Strona internetowa z listą zadań do wykonania. Haczyk w tym, że nie została tu napisana ani jedna linijka kodu JavaScript."
      />
      <Card
        src="/ktwardowski/portfolio/web/watch.jpg"
        title="Wonderful Watch"
        body="Chciałem zaprojektować stronę z zegarem, która wyłamuje się na tle innych. W tym projekcie połączyłem podstawę JavaScript z nowoczesnym designem."
      />
      <Card
        src="/ktwardowski/portfolio/web/strefa.jpg"
        title="Strefa Menadżera"
        body="Mój największy projekt w Symfony. Jest to aplikacja webowa dla menadżerów firmy. Zalogowany administrator może dodawać, edytować oraz usuwać posty czy kategorie. Na ten moment to jedynie funkcjonalny protopyp/szablon."
      />
    </div>
  </main>
  <dialog id="imageModal" class="modal" aria-modal="true" role="dialog">
    <button class="close" role="button" tabindex="0" aria-label="Close">&times;</button>
    <img class="modal-content" id="modalImage" alt="Przybliżony obrazek" />
  </dialog>

  <style>
    h1 {
      font-size: 4rem;
      font-weight: 700;
      line-height: 1;
      text-align: center;
      margin-bottom: 1em;
      margin-top: 7rem;
    }

  .buttons {
    display: flex;
    justify-content: center;
    margin-bottom: 2rem;
  }

  .filter-button {
    margin-left: 1rem;
  }

  .cards {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    padding-bottom: 30px;
  }

  .modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    justify-content: center;
    align-items: center;
    margin: 0;
  }

  .modal[open] {
    display: flex;
  }

  .modal-content {
    position: relative;
    max-width: 80%;
    max-height: 80%;
  }

  .modal-content img {
    width: 100%;
    height: auto;
  }

  .close {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    color: white;
    font-size: 2rem;
    cursor: pointer;
  }
    .close:hover,
    .close:focus {
      color: #bbb;
      text-decoration: none;
      cursor: pointer;
    }

    @container main (max-width: 768px) {
      h1 {
        font-size: 3rem;
      }

      .filter-button {
        margin-left: 0.5rem;
        width: 29%;
        font-size: 0.9rem;
      }
    }
  </style>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll(".filter-button");
    const cardsContainers = document.querySelectorAll(".cards");
    const modal = document.getElementById("imageModal") as HTMLDialogElement;
    const modalImg = document.getElementById("modalImage") as HTMLImageElement;
    const closeBtn = document.querySelector(".close") as HTMLButtonElement;
    let lastFocusedElement: HTMLElement;

    buttons.forEach((button) => {
      button.addEventListener("click", () => {
        const category = button.getAttribute("data-category");
        console.log("Category selected:", category);
        cardsContainers.forEach((container) => {
          const containerElement = container as HTMLElement;
          if (containerElement.getAttribute("data-category") === category) {
            containerElement.style.display = "flex";
          } else {
            containerElement.style.display = "none";
          }
        });
      });
    });

    cardsContainers.forEach((container) => {
      container.querySelectorAll("img").forEach((img) => {
        img.addEventListener("click", () => {
          lastFocusedElement = document.activeElement as HTMLElement;
          console.log("Image clicked:", img.src);
          modalImg.src = img.src;
          modal.showModal();
          closeBtn.focus();
        });
      });
    });

    closeBtn.addEventListener("click", () => {
      console.log("Close button clicked");
      modal.close();
      lastFocusedElement.focus();
    });

    window.addEventListener("click", (event) => {
      if (event.target === modal) {
        console.log("Outside modal clicked");
        modal.close();
        lastFocusedElement.focus();
      }
    });

    modal.addEventListener("keydown", (event) => {
      const focusableElements = modal.querySelectorAll('button, [tabindex]:not([tabindex="-1"])');
      const firstElement = focusableElements[0] as HTMLElement;
      const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;

      if (event.key === "Tab") {
        if (event.shiftKey) {
          if (document.activeElement === firstElement) {
            event.preventDefault();
            lastElement.focus();
          }
        } else {
          if (document.activeElement === lastElement) {
            event.preventDefault();
            firstElement.focus();
          }
        }
      }
    });
  });
</script>
</Layout>
