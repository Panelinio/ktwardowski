---
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
---

<Layout title="Portfolio">
  <main>
    <h1>Portfolio</h1>
    <div class="buttons">
      <button class="filter-button" data-category="art">Drawings</button>
      <button class="filter-button" data-category="graphic">Graphics</button>
      <button class="filter-button" data-category="webdesign">Web Design</button
      >
    </div>
    <div class="cards" id="drawing" data-category="art">
      <Card
        src="/ktwardowski/portfolio/art/verferia.jpg"
        title="Verferia"
        body="A refined project of a monster for one of my comics. I received a distinction and an award in a competition for this."
      />
      <Card
        src="/ktwardowski/portfolio/art/cherry.jpg"
        title="Blooming Cherry"
        body="Creating this drawing, I wanted to achieve the effect of Japanese paintings."
      />
      <Card
        src="/ktwardowski/portfolio/art/wiedźmin.jpg"
        title="The Witcher"
        body="Portrait of Geralt of Rivia, the hero of Andrzej Sapkowski's saga."
      />
      <Card
        src="/ktwardowski/portfolio/art/las.jpg"
        title="Forest"
        body="A recreated photo of a forest taken by me."
      />
      <Card
        src="/ktwardowski/portfolio/art/łąka.jpg"
        title="Meadow"
        body="An evening view of a meadow near my hometown."
      />
      <Card
        src="/ktwardowski/portfolio/art/krokodyl.jpg"
        title="Crocodile with an Umbrella"
        body="A drawing created as part of an illustrator's challenge."
      />
      <Card
        src="/ktwardowski/portfolio/art/królik.jpg"
        title="Rabbit"
        body="The task was to draw a magical rabbit, so I added magical items from the game League of Legends to mine."
      />
      <Card
        src="/ktwardowski/portfolio/art/dziewczynakawa.jpg"
        title="Sweater in Coffee Color"
        body="Illustration for a book cover."
      />
      <Card
        src="/ktwardowski/portfolio/art/httyd.jpg"
        title="Toothless"
        body="I love the How to Train Your Dragon series <3"
      />
      <Card
        src="/ktwardowski/portfolio/art/duch.jpg"
        title="Napstablook"
        body="The task was to draw a ghost, so I chose Napstablook from the game Undertale."
      />
    </div>
    <div class="cards" id="graphic" data-category="graphic">
      <Card
        src="/ktwardowski/portfolio/graphic/devilgarage.jpg"
        title="Devil Garage"
        body="Logo for a detailing company. The client wanted it to feature a devil holding a polisher."
      />
      <Card
        src="/ktwardowski/portfolio/graphic/invetec.jpg"
        title="Invetec"
        body="A company specializing in car parts. The logo was to be modern and simple."
      />
      <Card
        src="/ktwardowski/portfolio/graphic/loggr.jpg"
        title="MT House"
        body="Logo design for a construction company. Designed with a modern style and simplicity in mind - I wanted to incorporate the letters M and T."
      />
      <Card
        src="/ktwardowski/portfolio/graphic/it.jpg"
        title="BSOD Day"
        body="Graphic referring to the famous Crowdstrike failure. Greetings and words of encouragement to every IT specialist as the famous Blue Screen of Death."
      />
      <Card
        src="/ktwardowski/portfolio/graphic/esta.jpg"
        title="Esta-Travel"
        body="Creating this logo, I was guided by the visualization of American transport - that was also the brief. The result? A combination of a truck and an eagle."
      />
    </div>
    <div class="cards" id="web" data-category="webdesign">
      <Card
        src="/ktwardowski/portfolio/web/abstratec.jpg"
        title="Abstratec"
        body="Creating Abstratec, I was guided by the style called 'Generative Design', but I relied on my graphic design skills."
      />
      <Card
        src="/ktwardowski/portfolio/web/todo.jpg"
        title="TODO List"
        body="A website with a to-do list. The catch is that not a single line of JavaScript code was written here."
      />
      <Card
        src="/ktwardowski/portfolio/web/watch.jpg"
        title="Wonderful Watch"
        body="I wanted to design a clock website that stands out from others. In this project, I combined basic JavaScript with modern design."
      />
      <Card
        src="/ktwardowski/portfolio/web/strefa.jpg"
        title="Manager's Zone"
        body="My biggest project in Symfony. It is a web application for company managers. A logged-in administrator can add, edit, and delete posts or categories. At the moment, it is only a functional prototype/template."
      />
    </div>
  </main>
  <dialog id="imageModal" class="modal" aria-modal="true" role="dialog">
    <button class="close" role="button" tabindex="0" aria-label="Close"
      >&times;</button
    >
    <img class="modal-content" id="modalImage" alt="Przybliżony obrazek" />
  </dialog>

  <style>
    h1 {
      font-size: 4rem;
      font-weight: 700;
      line-height: 1;
      text-align: center;
      margin-bottom: 1em;
      margin-top: 7rem;
    }

    .buttons {
      display: flex;
      justify-content: center;
      margin-bottom: 2rem;
    }

    .filter-button {
      margin-left: 1rem;
    }

    .cards {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      padding-bottom: 30px;
    }

    .modal {
      display: none;
      position: fixed;
      z-index: 1;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.9);
      justify-content: center;
      align-items: center;
      margin: 0;
    }

    .modal[open] {
      display: flex;
    }

    .modal-content {
      position: relative;
      max-width: 80%;
      max-height: 80%;
    }

    .modal-content img {
      width: 100%;
      height: auto;
    }

    .close {
      position: absolute;
      top: 10px;
      right: 10px;
      background: none;
      border: none;
      color: white;
      font-size: 2rem;
      cursor: pointer;
    }
    .close:hover,
    .close:focus {
      color: #bbb;
      text-decoration: none;
      cursor: pointer;
    }

    @container main (max-width: 768px) {
      h1 {
        font-size: 3rem;
      }

      .filter-button {
        margin-left: 0.5rem;
        width: 29%;
        font-size: 0.9rem;
      }
    }
  </style>
  <script>
    document.addEventListener("DOMContentLoaded", () => {
      const buttons = document.querySelectorAll(".filter-button");
      const cardsContainers = document.querySelectorAll(".cards");
      const modal = document.getElementById("imageModal") as HTMLDialogElement;
      const modalImg = document.getElementById(
        "modalImage"
      ) as HTMLImageElement;
      const closeBtn = document.querySelector(".close") as HTMLButtonElement;
      let lastFocusedElement: HTMLElement;

      buttons.forEach((button) => {
        button.addEventListener("click", () => {
          const category = button.getAttribute("data-category");
          console.log("Category selected:", category);
          cardsContainers.forEach((container) => {
            const containerElement = container as HTMLElement;
            if (containerElement.getAttribute("data-category") === category) {
              containerElement.style.display = "flex";
            } else {
              containerElement.style.display = "none";
            }
          });
        });
      });

      cardsContainers.forEach((container) => {
        container.querySelectorAll("img").forEach((img) => {
          img.addEventListener("click", () => {
            lastFocusedElement = document.activeElement as HTMLElement;
            console.log("Image clicked:", img.src);
            modalImg.src = img.src;
            modal.showModal();
            closeBtn.focus();
          });
        });
      });

      closeBtn.addEventListener("click", () => {
        console.log("Close button clicked");
        modal.close();
        lastFocusedElement.focus();
      });

      window.addEventListener("click", (event) => {
        if (event.target === modal) {
          console.log("Outside modal clicked");
          modal.close();
          lastFocusedElement.focus();
        }
      });

      modal.addEventListener("keydown", (event) => {
        const focusableElements = modal.querySelectorAll(
          'button, [tabindex]:not([tabindex="-1"])'
        );
        const firstElement = focusableElements[0] as HTMLElement;
        const lastElement = focusableElements[
          focusableElements.length - 1
        ] as HTMLElement;

        if (event.key === "Tab") {
          if (event.shiftKey) {
            if (document.activeElement === firstElement) {
              event.preventDefault();
              lastElement.focus();
            }
          } else {
            if (document.activeElement === lastElement) {
              event.preventDefault();
              firstElement.focus();
            }
          }
        }
      });
    });
  </script>
</Layout>
