---
interface Props {
  title: string;
  body: string;
  src: string;
}

const { src, title, body } = Astro.props;
---

<article class="link-card">
  <section class="desc">
    <h2>
      {title}
    </h2>
    <p>
      {body}
    </p>
  </section>
  <section class="image">
    <img src={src} alt={body} />
  </section>
</article>
<style>
  .link-card {
    display: flex;
    padding: 1rem;
    background-color: var(--accent);
    background-size: 400%;
    border-radius: 8px;
    width: 50%;
    margin: 1rem;
    opacity: 0;
    transform: translateY(20px);
    transition:
      opacity 0.6s ease-out,
      transform 0.6s ease-out;
    cursor: pointer;
  }

  .link-card.visible {
    opacity: 1;
    transform: translateY(0);
  }

  h2 {
    margin: 0;
    font-size: 1.6rem;
  }
  p {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  .desc,
  .image {
    width: 50%;
  }
  .image img {
    width: 100%;
    border-radius: 6px;
  }
</style>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const cards = document.querySelectorAll(".link-card");

    const observer = new IntersectionObserver(
      (entries, observer) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("visible");
            observer.unobserve(entry.target);
          }
        });
      },
      {
        threshold: 0.1,
      }
    );

    cards.forEach((card) => {
      observer.observe(card);
    });
  });
</script>
